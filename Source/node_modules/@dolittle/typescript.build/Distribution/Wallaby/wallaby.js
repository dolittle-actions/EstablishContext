"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Dolittle. All rights reserved.
 *  Licensed under the MIT License. See LICENSE in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const internal_1 = require("../internal");
function wallaby(settingsCallback, setupCallback) {
    return (wallaby) => {
        const project = new internal_1.Project(process.cwd());
        const setup = new internal_1.WallabySetup(wallaby, project, setupCallback);
        const settings = new internal_1.WallabySettings(wallaby, project, setup, settingsCallback);
        setNodePath(wallaby, project);
        if (typeof settingsCallback === 'function')
            settingsCallback(wallaby, settings);
        return settings.settings;
    };
}
exports.wallaby = wallaby;
function setNodePath(w, project) {
    let nodePath = w.projectCacheDir;
    const sourcePath = path_1.default.join(project.sources.root, internal_1.SourceFiles.FOLDER_NAME);
    if (project.workspaces.length > 1 && fs_1.default.existsSync(sourcePath)) {
        nodePath = path_1.default.join(nodePath, internal_1.SourceFiles.FOLDER_NAME);
    }
    process.env.NODE_PATH = nodePath;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2FsbGFieS5qcyIsInNvdXJjZVJvb3QiOiIuL1NvdXJjZS8iLCJzb3VyY2VzIjpbIldhbGxhYnkvd2FsbGFieS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7Z0dBR2dHO0FBQ2hHLDRDQUFvQjtBQUNwQixnREFBd0I7QUFDeEIsMENBQTBIO0FBRTFILFNBQWdCLE9BQU8sQ0FBQyxnQkFBMEMsRUFBRSxhQUE2QjtJQUM3RixPQUFPLENBQUMsT0FBWSxFQUFFLEVBQUU7UUFDcEIsTUFBTSxPQUFPLEdBQUcsSUFBSSxrQkFBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBQzNDLE1BQU0sS0FBSyxHQUFHLElBQUksdUJBQVksQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLGFBQWEsQ0FBQyxDQUFDO1FBQ2hFLE1BQU0sUUFBUSxHQUFHLElBQUksMEJBQWUsQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO1FBRWhGLFdBQVcsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFFOUIsSUFBSSxPQUFPLGdCQUFnQixLQUFLLFVBQVU7WUFBRSxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDaEYsT0FBTyxRQUFRLENBQUMsUUFBUSxDQUFDO0lBQzdCLENBQUMsQ0FBQztBQUNOLENBQUM7QUFYRCwwQkFXQztBQUVELFNBQVMsV0FBVyxDQUFDLENBQU0sRUFBRSxPQUFnQjtJQUN6QyxJQUFJLFFBQVEsR0FBVyxDQUFDLENBQUMsZUFBZSxDQUFDO0lBQ3pDLE1BQU0sVUFBVSxHQUFHLGNBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsc0JBQVcsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUM1RSxJQUFJLE9BQU8sQ0FBQyxVQUFVLENBQUMsTUFBTSxHQUFHLENBQUMsSUFBSSxZQUFFLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxFQUFFO1FBQzVELFFBQVEsR0FBRyxjQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxzQkFBVyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0tBQzNEO0lBRUQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEdBQUcsUUFBUSxDQUFDO0FBQ3JDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgRG9saXR0bGUuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTElDRU5TRSBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgZnMgZnJvbSAnZnMnO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgeyBXYWxsYWJ5U2V0dGluZ3NDYWxsYmFjaywgU2V0dXBDYWxsYmFjaywgV2FsbGFieVNldHRpbmdzLCBXYWxsYWJ5U2V0dXAsIFByb2plY3QsIFNvdXJjZUZpbGVzIH0gZnJvbSAnLi4vaW50ZXJuYWwnO1xuXG5leHBvcnQgZnVuY3Rpb24gd2FsbGFieShzZXR0aW5nc0NhbGxiYWNrPzogV2FsbGFieVNldHRpbmdzQ2FsbGJhY2ssIHNldHVwQ2FsbGJhY2s/OiBTZXR1cENhbGxiYWNrKSB7XG4gICAgcmV0dXJuICh3YWxsYWJ5OiBhbnkpID0+IHtcbiAgICAgICAgY29uc3QgcHJvamVjdCA9IG5ldyBQcm9qZWN0KHByb2Nlc3MuY3dkKCkpO1xuICAgICAgICBjb25zdCBzZXR1cCA9IG5ldyBXYWxsYWJ5U2V0dXAod2FsbGFieSwgcHJvamVjdCwgc2V0dXBDYWxsYmFjayk7XG4gICAgICAgIGNvbnN0IHNldHRpbmdzID0gbmV3IFdhbGxhYnlTZXR0aW5ncyh3YWxsYWJ5LCBwcm9qZWN0LCBzZXR1cCwgc2V0dGluZ3NDYWxsYmFjayk7XG5cbiAgICAgICAgc2V0Tm9kZVBhdGgod2FsbGFieSwgcHJvamVjdCk7XG5cbiAgICAgICAgaWYgKHR5cGVvZiBzZXR0aW5nc0NhbGxiYWNrID09PSAnZnVuY3Rpb24nKSBzZXR0aW5nc0NhbGxiYWNrKHdhbGxhYnksIHNldHRpbmdzKTtcbiAgICAgICAgcmV0dXJuIHNldHRpbmdzLnNldHRpbmdzO1xuICAgIH07XG59XG5cbmZ1bmN0aW9uIHNldE5vZGVQYXRoKHc6IGFueSwgcHJvamVjdDogUHJvamVjdCkge1xuICAgIGxldCBub2RlUGF0aDogc3RyaW5nID0gdy5wcm9qZWN0Q2FjaGVEaXI7XG4gICAgY29uc3Qgc291cmNlUGF0aCA9IHBhdGguam9pbihwcm9qZWN0LnNvdXJjZXMucm9vdCwgU291cmNlRmlsZXMuRk9MREVSX05BTUUpO1xuICAgIGlmIChwcm9qZWN0LndvcmtzcGFjZXMubGVuZ3RoID4gMSAmJiBmcy5leGlzdHNTeW5jKHNvdXJjZVBhdGgpKSB7XG4gICAgICAgIG5vZGVQYXRoID0gcGF0aC5qb2luKG5vZGVQYXRoLCBTb3VyY2VGaWxlcy5GT0xERVJfTkFNRSk7XG4gICAgfVxuXG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9QQVRIID0gbm9kZVBhdGg7XG59XG4iXX0=