{"version":3,"file":"SubstituteBase.js","sourceRoot":"","sources":["../../src/SubstituteBase.ts"],"names":[],"mappings":"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","sourcesContent":["import { inspect } from 'util';\nimport { PropertyType, stringifyArguments, stringifyCalls, Call } from './Utilities';\n\nexport class SubstituteJS {\n  private _lastRegisteredSubstituteJSMethodOrProperty: string\n  set lastRegisteredSubstituteJSMethodOrProperty(value: string) {\n    this._lastRegisteredSubstituteJSMethodOrProperty = value;\n  }\n  get lastRegisteredSubstituteJSMethodOrProperty() {\n    return typeof this._lastRegisteredSubstituteJSMethodOrProperty === 'undefined' ? 'root' : this._lastRegisteredSubstituteJSMethodOrProperty;\n  }\n  [Symbol.toPrimitive]() {\n    return `[Function: ${this.constructor.name}] -> ${this.lastRegisteredSubstituteJSMethodOrProperty}`;\n  }\n  [Symbol.toStringTag]() {\n    return `[Function: ${this.constructor.name}] -> ${this.lastRegisteredSubstituteJSMethodOrProperty}`;\n  }\n  [Symbol.iterator]() {\n    return `[Function: ${this.constructor.name}] -> ${this.lastRegisteredSubstituteJSMethodOrProperty}`;\n  }\n  [inspect.custom]() {\n    return `[Function: ${this.constructor.name}] -> ${this.lastRegisteredSubstituteJSMethodOrProperty}`;\n  }\n  valueOf() {\n    return `[Function: ${this.constructor.name}] -> ${this.lastRegisteredSubstituteJSMethodOrProperty}`;\n  }\n  $$typeof() {\n    return `[Function: ${this.constructor.name}] -> ${this.lastRegisteredSubstituteJSMethodOrProperty}`;\n  }\n  toString() {\n    return `[Function: ${this.constructor.name}] -> ${this.lastRegisteredSubstituteJSMethodOrProperty}`;\n  }\n  inspect() {\n    return `[Function: ${this.constructor.name}] -> ${this.lastRegisteredSubstituteJSMethodOrProperty}`;\n  }\n  length = `[Function: ${this.constructor.name}] -> ${this.lastRegisteredSubstituteJSMethodOrProperty}`;\n}\n\nenum SubstituteExceptionTypes {\n  CallCountMissMatch = 'CallCountMissMatch',\n  PropertyNotMocked = 'PropertyNotMocked'\n}\n\nexport class SubstituteException extends Error {\n  type: SubstituteExceptionTypes\n  constructor(msg: string, exceptionType?: SubstituteExceptionTypes) {\n    super(msg);\n    Error.captureStackTrace(this, SubstituteException);\n    this.name = new.target.name;\n    this.type = exceptionType\n  }\n\n  static forCallCountMissMatch(\n    callCount: { expected: number | null, received: number },\n    property: { type: PropertyType, value: PropertyKey },\n    calls: { expectedArguments: any[], received: Call[] }\n  ) {\n    const message = 'Expected ' + (callCount.expected === null ? '1 or more' : callCount.expected) +\n      ' call' + (callCount.expected === 1 ? '' : 's') + ' to the ' + property.type + ' ' + property.value.toString() +\n      ' with ' + stringifyArguments(calls.expectedArguments) + ', but received ' + (callCount.received === 0 ? 'none' : callCount.received) +\n      ' of such call' + (callCount.received === 1 ? '' : 's') +\n      '.\\nAll calls received to ' + property.type + ' ' + property.value.toString() + ':' + stringifyCalls(calls.received);\n    return new this(message, SubstituteExceptionTypes.CallCountMissMatch);\n  }\n\n  static forPropertyNotMocked(property: PropertyKey) {\n    return new this(`There is no mock for property: ${String(property)}`, SubstituteExceptionTypes.PropertyNotMocked)\n  }\n\n  static generic(message: string) {\n    return new this(message)\n  }\n}"]}