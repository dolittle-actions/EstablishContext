{"version":3,"file":"Utilities.js","sourceRoot":"","sources":["../../src/Utilities.ts"],"names":[],"mappings":"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","sourcesContent":["import { Argument, AllArguments } from './Arguments';\r\nimport { GetPropertyState } from './states/GetPropertyState';\r\nimport { InitialState } from './states/InitialState';\r\nimport { Context } from './Context';\r\nimport * as util from 'util';\r\n\r\nexport type Call = any[] // list of args\r\n\r\nexport enum PropertyType {\r\n    method = 'method',\r\n    property = 'property'\r\n}\r\n\r\nexport enum SubstituteMethods {\r\n    received = 'received',\r\n    didNotReceive = 'didNotReceive',\r\n    mimicks = 'mimicks',\r\n    throws = 'throws',\r\n    returns = 'returns',\r\n    resolves = 'resolves',\r\n    rejects = 'rejects'\r\n}\r\n\r\nconst seenObject = Symbol();\r\n\r\nexport function stringifyArguments(args: any[]) {\r\n    args = args.map(x => util.inspect(x));\r\n    return args && args.length > 0 ? 'arguments [' + args.join(', ') + ']' : 'no arguments';\r\n};\r\n\r\nexport function areArgumentArraysEqual(a: any[], b: any[]) {\r\n    if (a.find(x => x instanceof AllArguments) || b.find(b => b instanceof AllArguments)) {\r\n        return true;\r\n    }\r\n\r\n    for (let i = 0; i < Math.max(b.length, a.length); i++) {\r\n        if (!areArgumentsEqual(b[i], a[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport function stringifyCalls(calls: Call[]) {\r\n\r\n    if (calls.length === 0)\r\n        return ' (no calls)';\r\n\r\n    let output = '';\r\n    for (let call of calls) {\r\n        output += '\\n-> call with ' + (call.length ? stringifyArguments(call) : '(no arguments)')\r\n    }\r\n\r\n    return output;\r\n};\r\n\r\nexport function areArgumentsEqual(a: any, b: any) {\r\n\r\n    if (a instanceof Argument && b instanceof Argument)\r\n        return false;\r\n\r\n    if (a instanceof AllArguments || b instanceof AllArguments)\r\n        return true;\r\n\r\n    if (a instanceof Argument)\r\n        return a.matches(b);\r\n\r\n    if (b instanceof Argument)\r\n        return b.matches(a);\r\n\r\n    return deepEqual(a, b);\r\n};\r\n\r\nfunction deepEqual(realA: any, realB: any, objectReferences: object[] = []): boolean {\r\n    const a = objectReferences.includes(realA) ? seenObject : realA;\r\n    const b = objectReferences.includes(realB) ? seenObject : realB;\r\n    const newObjectReferences = updateObjectReferences(objectReferences, a, b);\r\n\r\n    if (nonNullObject(a) && nonNullObject(b)) {\r\n        if (a.constructor !== b.constructor) return false;\r\n        const objectAKeys = Object.keys(a);\r\n        if (objectAKeys.length !== Object.keys(b).length) return false;\r\n        for (const key of objectAKeys) {\r\n            if (!deepEqual(a[key], b[key], newObjectReferences)) return false;\r\n        }\r\n        return true;\r\n    }\r\n    return a === b;\r\n}\r\n\r\nfunction updateObjectReferences(objectReferences: Array<object>, a: any, b: any) {\r\n    const tempObjectReferences = [...objectReferences, nonNullObject(a) && !objectReferences.includes(a) ? a : void 0];\r\n    return [...tempObjectReferences, nonNullObject(b) && !tempObjectReferences.includes(b) ? b : void 0];\r\n}\r\n\r\nfunction nonNullObject(value: any): value is { [key: string]: any } {\r\n    return typeof value === 'object' && value !== null;\r\n}"]}