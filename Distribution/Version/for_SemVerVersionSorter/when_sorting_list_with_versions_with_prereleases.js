"use strict";
// Copyright (c) Dolittle. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.
Object.defineProperty(exports, "__esModule", { value: true });
const semver_1 = require("semver");
const a_sorter_1 = require("./given/a_sorter");
describe('when sorting list with versions with pre-releases', () => {
    const version_sorter = new a_sorter_1.a_sorter().sorter;
    const version1 = new semver_1.SemVer('2.0.0-preview.2');
    const version2 = new semver_1.SemVer('2.0.0-preview.1');
    const version3 = new semver_1.SemVer('2.0.0-beta.2');
    const version4 = new semver_1.SemVer('2.0.0-beta.1');
    const version5 = new semver_1.SemVer('2.0.0-alpha.2');
    const version6 = new semver_1.SemVer('2.0.0-alpha.1');
    const res = version_sorter.sort([version2, version3, version1, version5, version4, version6], true);
    it('should return a list with three elements', () => res.should.have.lengthOf(6));
    it('should return biggest version as the first element ', () => res[0].should.equal(version1));
    it('should return second biggest version as the second element', () => res[1].should.equal(version2));
    it('should return third biggest version as the third element', () => res[2].should.equal(version3));
    it('should return biggest version as the first element ', () => res[3].should.equal(version4));
    it('should return second biggest version as the second element', () => res[4].should.equal(version5));
    it('should return third biggest version as the third element', () => res[5].should.equal(version6));
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNvdXJjZS9WZXJzaW9uL2Zvcl9TZW1WZXJWZXJzaW9uU29ydGVyL3doZW5fc29ydGluZ19saXN0X3dpdGhfdmVyc2lvbnNfd2l0aF9wcmVyZWxlYXNlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsK0NBQStDO0FBQy9DLHFHQUFxRzs7QUFFckcsbUNBQWdDO0FBQ2hDLCtDQUE0QztBQUU1QyxRQUFRLENBQUMsbURBQW1ELEVBQUUsR0FBRyxFQUFFO0lBQy9ELE1BQU0sY0FBYyxHQUFHLElBQUksbUJBQVEsRUFBRSxDQUFDLE1BQU0sQ0FBQztJQUM3QyxNQUFNLFFBQVEsR0FBRyxJQUFJLGVBQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0lBQy9DLE1BQU0sUUFBUSxHQUFHLElBQUksZUFBTSxDQUFDLGlCQUFpQixDQUFDLENBQUM7SUFDL0MsTUFBTSxRQUFRLEdBQUcsSUFBSSxlQUFNLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDNUMsTUFBTSxRQUFRLEdBQUcsSUFBSSxlQUFNLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDNUMsTUFBTSxRQUFRLEdBQUcsSUFBSSxlQUFNLENBQUMsZUFBZSxDQUFDLENBQUM7SUFDN0MsTUFBTSxRQUFRLEdBQUcsSUFBSSxlQUFNLENBQUMsZUFBZSxDQUFDLENBQUM7SUFDN0MsTUFBTSxHQUFHLEdBQUcsY0FBYyxDQUFDLElBQUksQ0FBQyxDQUFDLFFBQVEsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsUUFBUSxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFFcEcsRUFBRSxDQUFDLDBDQUEwQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2xGLEVBQUUsQ0FBQyxxREFBcUQsRUFBRSxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQy9GLEVBQUUsQ0FBQyw0REFBNEQsRUFBRSxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ3RHLEVBQUUsQ0FBQywwREFBMEQsRUFBRSxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ3BHLEVBQUUsQ0FBQyxxREFBcUQsRUFBRSxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQy9GLEVBQUUsQ0FBQyw0REFBNEQsRUFBRSxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ3RHLEVBQUUsQ0FBQywwREFBMEQsRUFBRSxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0FBQ3hHLENBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6IlZlcnNpb24vZm9yX1NlbVZlclZlcnNpb25Tb3J0ZXIvd2hlbl9zb3J0aW5nX2xpc3Rfd2l0aF92ZXJzaW9uc193aXRoX3ByZXJlbGVhc2VzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBEb2xpdHRsZS4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4gU2VlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcHJvamVjdCByb290IGZvciBmdWxsIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG5cbmltcG9ydCB7IFNlbVZlciB9IGZyb20gJ3NlbXZlcic7XG5pbXBvcnQgeyBhX3NvcnRlciB9IGZyb20gJy4vZ2l2ZW4vYV9zb3J0ZXInO1xuXG5kZXNjcmliZSgnd2hlbiBzb3J0aW5nIGxpc3Qgd2l0aCB2ZXJzaW9ucyB3aXRoIHByZS1yZWxlYXNlcycsICgpID0+IHtcbiAgICBjb25zdCB2ZXJzaW9uX3NvcnRlciA9IG5ldyBhX3NvcnRlcigpLnNvcnRlcjtcbiAgICBjb25zdCB2ZXJzaW9uMSA9IG5ldyBTZW1WZXIoJzIuMC4wLXByZXZpZXcuMicpO1xuICAgIGNvbnN0IHZlcnNpb24yID0gbmV3IFNlbVZlcignMi4wLjAtcHJldmlldy4xJyk7XG4gICAgY29uc3QgdmVyc2lvbjMgPSBuZXcgU2VtVmVyKCcyLjAuMC1iZXRhLjInKTtcbiAgICBjb25zdCB2ZXJzaW9uNCA9IG5ldyBTZW1WZXIoJzIuMC4wLWJldGEuMScpO1xuICAgIGNvbnN0IHZlcnNpb241ID0gbmV3IFNlbVZlcignMi4wLjAtYWxwaGEuMicpO1xuICAgIGNvbnN0IHZlcnNpb242ID0gbmV3IFNlbVZlcignMi4wLjAtYWxwaGEuMScpO1xuICAgIGNvbnN0IHJlcyA9IHZlcnNpb25fc29ydGVyLnNvcnQoW3ZlcnNpb24yLCB2ZXJzaW9uMywgdmVyc2lvbjEsIHZlcnNpb241LCB2ZXJzaW9uNCwgdmVyc2lvbjZdLCB0cnVlKTtcblxuICAgIGl0KCdzaG91bGQgcmV0dXJuIGEgbGlzdCB3aXRoIHRocmVlIGVsZW1lbnRzJywgKCkgPT4gcmVzLnNob3VsZC5oYXZlLmxlbmd0aE9mKDYpKTtcbiAgICBpdCgnc2hvdWxkIHJldHVybiBiaWdnZXN0IHZlcnNpb24gYXMgdGhlIGZpcnN0IGVsZW1lbnQgJywgKCkgPT4gcmVzWzBdLnNob3VsZC5lcXVhbCh2ZXJzaW9uMSkpO1xuICAgIGl0KCdzaG91bGQgcmV0dXJuIHNlY29uZCBiaWdnZXN0IHZlcnNpb24gYXMgdGhlIHNlY29uZCBlbGVtZW50JywgKCkgPT4gcmVzWzFdLnNob3VsZC5lcXVhbCh2ZXJzaW9uMikpO1xuICAgIGl0KCdzaG91bGQgcmV0dXJuIHRoaXJkIGJpZ2dlc3QgdmVyc2lvbiBhcyB0aGUgdGhpcmQgZWxlbWVudCcsICgpID0+IHJlc1syXS5zaG91bGQuZXF1YWwodmVyc2lvbjMpKTtcbiAgICBpdCgnc2hvdWxkIHJldHVybiBiaWdnZXN0IHZlcnNpb24gYXMgdGhlIGZpcnN0IGVsZW1lbnQgJywgKCkgPT4gcmVzWzNdLnNob3VsZC5lcXVhbCh2ZXJzaW9uNCkpO1xuICAgIGl0KCdzaG91bGQgcmV0dXJuIHNlY29uZCBiaWdnZXN0IHZlcnNpb24gYXMgdGhlIHNlY29uZCBlbGVtZW50JywgKCkgPT4gcmVzWzRdLnNob3VsZC5lcXVhbCh2ZXJzaW9uNSkpO1xuICAgIGl0KCdzaG91bGQgcmV0dXJuIHRoaXJkIGJpZ2dlc3QgdmVyc2lvbiBhcyB0aGUgdGhpcmQgZWxlbWVudCcsICgpID0+IHJlc1s1XS5zaG91bGQuZXF1YWwodmVyc2lvbjYpKTtcbn0pO1xuIl19
